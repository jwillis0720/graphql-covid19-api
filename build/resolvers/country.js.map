{"version":3,"sources":["../../src/resolvers/country.js"],"names":["countryObject","timeline","country","_","dataSources","countryInfo","daterequested","ncapi","getTimeLinebyCountry","timeLine","undefined","miliseconds","getTime","filter","key","date","state","getStates","statesArray","console","log","parentcountry"],"mappings":";;;;;;;;;;;AAAA,IAAMA,aAAa,GAAG;AACpBC,EAAAA,QAAQ;AAAA,4EAAE,iBAAOC,OAAP,EAAgBC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqBC,cAAAA,WAArB,QAAqBA,WAArB;AACFC,cAAAA,WADE,GACYH,OAAO,CAACG,WADpB;AAEFC,cAAAA,aAFE,GAEcJ,OAAO,CAACI,aAFtB;AAAA;AAAA,qBAGeF,WAAW,CAACG,KAAZ,CAAkBC,oBAAlB,CAAuCH,WAAvC,CAHf;;AAAA;AAGFI,cAAAA,QAHE;;AAAA,oBAIJH,aAAa,KAAKI,SAJd;AAAA;AAAA;AAAA;;AAAA,+CAKCD,QALD;;AAAA;AAOAE,cAAAA,WAPA,GAOcL,aAAa,CAACM,OAAd,EAPd;AAAA,+CAQCH,QAAQ,CAACI,MAAT,CAAgB,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAJ,KAAaJ,WAAtB;AAAA,eAAhB,CARD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADY;AAapBK,EAAAA,KAAK;AAAA,yEAAE,kBAAOd,OAAP,EAAgBC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqBC,cAAAA,WAArB,SAAqBA,WAArB;AAAA;AAAA,qBAGqBA,WAAW,CAACG,KAAZ,CAAkBU,SAAlB,EAHrB;;AAAA;AAGCC,cAAAA,WAHD;AAAA,gDAIEA,WAAW,CAACL,MAAZ,CAAmB,UAACG,KAAD,EAAW;AACnCG,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,aAAlB;AACA,uBAAOL,KAAK,CAACK,aAAN,KAAwBnB,OAAO,CAACA,OAAvC;AACD,eAHM,CAJF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAbe,CAAtB;eAuBeF,a","sourcesContent":["const countryObject = {\n  timeline: async (country, _, { dataSources }) => {\n    const countryInfo = country.countryInfo;\n    const daterequested = country.daterequested;\n    const timeLine = await dataSources.ncapi.getTimeLinebyCountry(countryInfo);\n    if (daterequested === undefined) {\n      return timeLine;\n    } else {\n      const miliseconds = daterequested.getTime();\n      return timeLine.filter((key) => key.date === miliseconds);\n      // return timeLine.filter((key) => key.date === miliseconds);\n    }\n  },\n  state: async (country, _, { dataSources }) => {\n    // right here we only have USA\n    // console.log(country.country)\n    const statesArray = await dataSources.ncapi.getStates();\n    return statesArray.filter((state) => {\n      console.log(state.parentcountry);\n      return state.parentcountry === country.country;\n    });\n  },\n};\nexport default countryObject;\n"],"file":"country.js"}